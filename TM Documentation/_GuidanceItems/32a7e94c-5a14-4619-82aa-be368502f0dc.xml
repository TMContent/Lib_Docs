<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>32a7e94c-5a14-4619-82aa-be368502f0dc</Id>
    <Library_Id>eb39d862-f752-4d1c-ab6e-14ed697397c0</Library_Id>
    <Title>Case Study - Fix Duplicate Article GUIDs created by Library split</Title>
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[This article shows a script that was used on the 3.0 release to fix the 'duplicate libraries issue' found after importing multiple libraries that have multiple Article with the same GUID.

The first code samples show how to access the WebServices via the C# file created from the WebServices WSDL

===Get guidanceItems and list them on a treeview===
{{{
var tmWebServices = new TM_WebServices();

var libraryName = ".NET 3.5";

var library = tmWebServices.GetLibraryByName(libraryName);
var guidanceItems = tmWebServices.GetGuidanceItemsInLibrary(library.id.guid());

var mappedItems = new Dictionary< string, List< TM_GuidanceItem>>();

foreach(var guidanceItem in guidanceItems)
	mappedItems.add(guidanceItem.Title, guidanceItem);
	
var treeView = panel.clear().add_TreeView_with_PropertyGrid(false).sort();
foreach(var mappedItem in mappedItems)
	treeView.add_Node(mappedItem.Key)
			 .add_Nodes(mappedItem.Value);
	
//return mappedItems;

//using O2.SecurityInnovation.TeamMentor
//O2File:TM_WebServices.cs
//O2File:Test_TM_Config.cs
//O2Ref:System.Web.Services.dll
}}}

===Get all views that belong a particular library===
{{{
var tmWebServices = new TM_WebServices();

var libraryName = ".NET 3.5";
var libraryId = "92718d53-36b2-47bc-b6f5-e60994385f46".guid();
 
var library = tmWebServices.GetLibraryByName(libraryName);

var guidanceItems = tmWebServices.GetGuidanceItemsInLibrary(library.id.guid());

var views = tmWebServices.GetAllViews();
var viewsByLibrary = new Dictionary< Guid,List< View_V3>>();
foreach(var view in views)
	viewsByLibrary.add(view.libraryId, view);

return viewsByLibrary[libraryId];

//using O2.SecurityInnovation.TeamMentor
//O2File:TM_WebServices.cs
//O2File:Test_TM_Config.cs
//O2Ref:System.Web.Services.dll
}}}

===Complete script (to fix duplicate GUIDs===
{{{
var tmWebServices = new TM_WebServices();

Action< string,string> login_as_user = 
	(username, passwordHash)=>{		
					tmWebServices.CookieContainer = new System.Net.CookieContainer();
					tmWebServices.Url 			 = Test_TM.tmWebServices;															
					var sessionID  				 =  tmWebServices.Login(username, passwordHash);
				};

login_as_user("editor", Test_TM.passwordHash_Editor);    


//var libraryName = ".NET 3.5";
//var libraryId = "92718d53-36b2-47bc-b6f5-e60994385f46".guid();
 
//var library = tmWebServices.GetLibraryByName(libraryName);

var views = tmWebServices.GetAllViews();
var viewsByLibrary = new Dictionary< Guid,List< View_V3>>();
foreach(var view in views)
	viewsByLibrary.add(view.libraryId, view);

foreach(var library in tmWebServices.GetLibraries())
{
	"> Mapping Library: {0} ".info(library.Caption);	
	
	var guidanceItemsInLibrary = tmWebServices.GetGuidanceItemsInLibrary(library.Id).toList(); 
	
	var guidanceItemsById = new Dictionary< Guid,TM_GuidanceItem>();
	foreach(var guidanceItem in guidanceItemsInLibrary)
		guidanceItemsById.Add(guidanceItem.Id,guidanceItem);
	
	var guidanceItems_Original_ById = new Dictionary< Guid,Guid>();
	foreach(var guidanceItem in guidanceItemsInLibrary)
		if (guidanceItem.Id_Original != Guid.Empty)
			guidanceItems_Original_ById.Add(guidanceItem.Id_Original,guidanceItem.Id); 
	
	var viewsInLibrary = viewsByLibrary[library.Id]; 
	
	foreach(var viewInLibrary in  viewsInLibrary)
	{
		"Mapping view: {0} ".info(viewInLibrary.caption);	
		
		var guidanceItemsToAdd = new List< Guid>();
		var guidanceItemsToRemove = new List< Guid>();
		
		foreach(var guid in viewInLibrary.guidanceItems.toList())
			if(guidanceItemsById.hasKey(guid).isFalse())		
			{
				if (guidanceItems_Original_ById.hasKey(guid))
				{
					var originalGuid = guidanceItems_Original_ById[guid];
		//			"***** guidanceItem OK via Original found: {0} -> {1}".debug(guid, originalGuid);
					guidanceItemsToAdd.Add(originalGuid);
					guidanceItemsToRemove.Add(guid);			
				}
				else 
		
					"******guidanceItem not found: {0}".error(guid);
			}
			
		if (guidanceItemsToAdd.size() > 0)
		{
			var result1 = tmWebServices.RemoveGuidanceItemsFromView(	viewInLibrary.viewId, guidanceItemsToRemove.ToArray());
			var result2 = tmWebServices.AddGuidanceItemsToView(	viewInLibrary.viewId, guidanceItemsToAdd.ToArray()); 	 
			"   save result: {0} , {1} , removed: {2}, added: {3}".debug(result1, result2, guidanceItemsToRemove.size(), guidanceItemsToAdd.size());
		}
	}	
 }
 return "all Done";

//using O2.SecurityInnovation.TeamMentor
//O2File:TM_WebServices.cs
//O2File:Test_TM_Config.cs
//O2Ref:System.Web.Services.dll
}}}

]]></Data>
  </Content>
</TeamMentor_Article>